- name: Define nginx_user.
  set_fact:
    nginx_user: "{{ __nginx_user }}"
  when: nginx_user is not defined

- name: Enable nginx repo.
  template:
    src: nginx.repo.j2
    dest: /etc/yum.repos.d/nginx.repo
    owner: root
    group: root
    mode: 0644

- name: Ensure nginx is installed.
  yum:
    name: "nginx"
    state: installed

# - name: Remove default nginx vhost config file (if configured).
#   file:
#     path: "{{ nginx_vhost_path }}/default.conf"
#     state: absent
#   when: nginx_remove_default_vhost
#   notify: restart nginx

- name: Ensure nginx_vhost_path exists.
  file:
    path: "{{ nginx_vhost_path }}"
    state: directory
  notify: reload nginx

- name: Add managed vhost config files.
  template:
    src: "{{ item.template|default(nginx_vhost_template) }}"
    dest: "{{ nginx_vhost_path }}/{{ item.filename|default(item.server_name.split(' ')[0] ~ '.conf') }}"
    force: yes
    owner: root
    group: root
    mode: 0644
  when: item.state|default('present') != 'absent'
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx

# Nginx setup.
- name: Copy nginx configuration in place.
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_file_path }}"
    owner: root
    group: "{{ root_group }}"
    mode: 0644
  notify: reload nginx

- file:
    path: "{{ application }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0700
  when: application|length > 0

- file:
    path: "{{ application }}/log"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: 0700
  when: application|length > 0

- name: Ensure nginx is started and enabled to start at boot.
  service: name=nginx state=started enabled=yes
